{"version":3,"sources":["Components/Square.js","Components/Board.js","utils/calculateWinner.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","className","onClick","this","props","style","backgroundColor","isHighlight","value","React","Component","Board","i","squares","highlight","indexOf","map","Array","fill","_","index","renderSquare","calculateWinner","lines","length","a","b","c","winner","line","Game","state","history","position","stepNumber","xIsNext","desc","slice","setState","concat","Math","floor","step","reverse","status","current","handleRestart","moves","move","toString","jumpTo","fontWeight","handleClick","handleDesc","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f034424.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Square extends React.Component {\r\n  \r\n    render() {\r\n      return (\r\n        <button \r\n          className=\"square\" \r\n          onClick={this.props.onClick}\r\n          style={{backgroundColor: this.props.isHighlight? \"red\" : \"white\"}}\r\n         >\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default class Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square \r\n               value={this.props.squares[i]}\r\n               onClick={() => this.props.onClick(i)}\r\n               isHighlight={this.props.highlight.indexOf(i) !== -1}\r\n              />;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          {[0, 1, 2].map((value) => {\r\n            return (\r\n              <div className=\"board-row\">\r\n                {Array(3).fill(0).map((_, index) => {\r\n                  return this.renderSquare(3*value + index)\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }","export default function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return {\r\n            winner: squares[a],\r\n            line: lines[i]\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from \"react\";\r\nimport Board from \"./Board\";\r\nimport calculateWinner from \"../utils/calculateWinner\";\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        history:[{\r\n          squares: Array(9).fill(null),\r\n          position: null\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        line:[],\r\n        desc: true\r\n      };\r\n    }\r\n      \r\n    handleClick(i){\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X': 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n          squares: squares,\r\n          position: [Math.floor(i / 3) + 1, i % 3 + 1]\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n      })\r\n    }\r\n    \r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n      })\r\n    }\r\n  \r\n    handleDesc(){\r\n      this.setState({\r\n        desc: !this.state.desc,\r\n        history: this.state.history.reverse(),\r\n        stepNumber: this.state.history.length - this.state.stepNumber - 1\r\n      })\r\n    }\r\n\r\n    handleRestart(){\r\n      this.setState({\r\n        history: [{\r\n          squares: Array(9).fill(null),\r\n          position: null\r\n        }],\r\n        stepNumber: 0\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);\r\n      let status;\r\n      let line=[]\r\n      if(winner){\r\n        status = (\r\n          <>\r\n            <span>{\"Winner: \" + winner.winner}</span>\r\n            <button onClick={() => this.handleRestart()}>Restart</button>\r\n          </>\r\n        )\r\n        line = winner.line;\r\n      }\r\n      else if(current.squares.indexOf(null) === -1){\r\n        status = (\r\n          <>\r\n            <span>Draw!  </span>\r\n            <button onClick={() => this.handleRestart()}>Restart</button>\r\n          </>\r\n        )\r\n      }\r\n      else{\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X': 'O');\r\n      }\r\n      \r\n      const moves = history.map((step, move) => {\r\n        const desc = step.position? \r\n              'Go to move #' + move + ' (' + step.position.toString() + ')':\r\n              'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button \r\n              onClick={() => this.jumpTo(move)}\r\n              style={{fontWeight: (move === this.state.stepNumber) ? \"bold\" : \"normal\"}}\r\n            >{desc}</button>\r\n          </li>\r\n        )\r\n      })\r\n      \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              highlight={line}\r\n              squares={current.squares}\r\n              onClick={i => this.handleClick(i)}\r\n             />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>\r\n              {status}\r\n              <button \r\n                onClick={() => this.handleDesc()}\r\n              >\r\n                {this.state.desc ? \"↓\" : \"↑\"}\r\n              </button>\r\n            </div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import './App.css';\nimport Game from './Components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}